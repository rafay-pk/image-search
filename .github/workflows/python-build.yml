name: Python build

on: [push]

permissions:
  contents: write

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Download UPX
      id: upx
      uses: suisei-cn/actions-download-file@v1.3.0
      with:
        url: "https://github.com/upx/upx/releases/download/v4.0.2/upx-4.0.2-win64.zip"
        target: public/
    - name: Extract UPX
      run: 7z x public/upx-4.0.2-win64.zip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build Application
      run: pyinstaller master.spec --upx-dir=upx-4.0.2-win64\
    - name: Compress Build
      run: 7z a image-search.zip .\dist\Image-Search\
    - name: Extract Branch Name 
      id: extract_branch
      shell: bash 
      run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT 
    - name: Extract Commit Number
      id: extract_commit
      shell: bash
      run: echo "commits=$(git rev-list --count ${{ steps.extract_branch.outputs.branch }})" >>$GITHUB_OUTPUT
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_branch.outputs.branch }}-0.${{ steps.extract_commit.outputs.commits }}
        release_name: ${{ steps.extract_branch.outputs.branch }}-0.${{ steps.extract_commit.outputs.commits }}
        draft: false
        prerelease: true
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: image-search.zip
        asset_name: image-search-${{ steps.extract_branch.outputs.branch }}-0.${{ steps.extract_commit.outputs.commits }}.zip
        asset_content_type: application/zip
